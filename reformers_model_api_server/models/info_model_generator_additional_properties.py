from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from reformers_model_api_server.models.base_model import Model
from reformers_model_api_server import util


class InfoModelGeneratorAdditionalProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mandatory_parameters=None, optional_parameters=None, info=None):  # noqa: E501
        """InfoModelGeneratorAdditionalProperties - a model defined in OpenAPI

        :param mandatory_parameters: The mandatory_parameters of this InfoModelGeneratorAdditionalProperties.  # noqa: E501
        :type mandatory_parameters: Dict[str, object]
        :param optional_parameters: The optional_parameters of this InfoModelGeneratorAdditionalProperties.  # noqa: E501
        :type optional_parameters: Dict[str, object]
        :param info: The info of this InfoModelGeneratorAdditionalProperties.  # noqa: E501
        :type info: str
        """
        self.openapi_types = {
            'mandatory_parameters': Dict[str, object],
            'optional_parameters': Dict[str, object],
            'info': str
        }

        self.attribute_map = {
            'mandatory_parameters': 'mandatory_parameters',
            'optional_parameters': 'optional_parameters',
            'info': 'info'
        }

        self._mandatory_parameters = mandatory_parameters
        self._optional_parameters = optional_parameters
        self._info = info

    @classmethod
    def from_dict(cls, dikt) -> 'InfoModelGeneratorAdditionalProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The info_model_generator_additionalProperties of this InfoModelGeneratorAdditionalProperties.  # noqa: E501
        :rtype: InfoModelGeneratorAdditionalProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mandatory_parameters(self) -> Dict[str, object]:
        """Gets the mandatory_parameters of this InfoModelGeneratorAdditionalProperties.


        :return: The mandatory_parameters of this InfoModelGeneratorAdditionalProperties.
        :rtype: Dict[str, object]
        """
        return self._mandatory_parameters

    @mandatory_parameters.setter
    def mandatory_parameters(self, mandatory_parameters: Dict[str, object]):
        """Sets the mandatory_parameters of this InfoModelGeneratorAdditionalProperties.


        :param mandatory_parameters: The mandatory_parameters of this InfoModelGeneratorAdditionalProperties.
        :type mandatory_parameters: Dict[str, object]
        """

        self._mandatory_parameters = mandatory_parameters

    @property
    def optional_parameters(self) -> Dict[str, object]:
        """Gets the optional_parameters of this InfoModelGeneratorAdditionalProperties.


        :return: The optional_parameters of this InfoModelGeneratorAdditionalProperties.
        :rtype: Dict[str, object]
        """
        return self._optional_parameters

    @optional_parameters.setter
    def optional_parameters(self, optional_parameters: Dict[str, object]):
        """Sets the optional_parameters of this InfoModelGeneratorAdditionalProperties.


        :param optional_parameters: The optional_parameters of this InfoModelGeneratorAdditionalProperties.
        :type optional_parameters: Dict[str, object]
        """

        self._optional_parameters = optional_parameters

    @property
    def info(self) -> str:
        """Gets the info of this InfoModelGeneratorAdditionalProperties.

        additional information regarding this model generator  # noqa: E501

        :return: The info of this InfoModelGeneratorAdditionalProperties.
        :rtype: str
        """
        return self._info

    @info.setter
    def info(self, info: str):
        """Sets the info of this InfoModelGeneratorAdditionalProperties.

        additional information regarding this model generator  # noqa: E501

        :param info: The info of this InfoModelGeneratorAdditionalProperties.
        :type info: str
        """

        self._info = info
